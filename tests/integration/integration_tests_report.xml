<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="0" failures="4" hostname="DESKTOP-52VNIJT" name="pytest" skipped="0" tests="5" time="156.891" timestamp="2022-06-29T00:33:06.484285"><testcase classname="tests.integration.test_37_sftp_storage.SFTPAcceptanceTests" file="tests\integration\test_37_sftp_storage.py" line="56" name="test_01_create_sftp_storage" time="16.067"></testcase><testcase classname="tests.integration.test_37_sftp_storage.SFTPAcceptanceTests" file="tests\integration\test_37_sftp_storage.py" line="66" name="test_02_push_file" time="28.287"><failure message="AssertionError: 0 != 10">self = &lt;tests.integration.test_37_sftp_storage.SFTPAcceptanceTests testMethod=test_02_push_file&gt;

    @pytest.mark.usefixtures(&apos;start_local_git_server&apos;, &apos;switch_to_tmp_dir&apos;)
    def test_02_push_file(self):
        self.set_up_push()
        number_of_files_in_bucket = 0
        self.check_amount_of_files(number_of_files_in_bucket)
        self.assertNotIn(ERROR_MESSAGE, check_output(MLGIT_PUSH % (self.repo_type, DATASET_NAME)))
        number_of_files_in_bucket = 10
&gt;       self.check_amount_of_files(number_of_files_in_bucket)

C:\Users\ClaudinM\workspace\ml-git\tests\integration\test_37_sftp_storage.py:74: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
C:\Users\ClaudinM\workspace\ml-git\tests\integration\test_37_sftp_storage.py:55: in check_amount_of_files
    self.assertEqual(file_count, expected_files)
E   AssertionError: 0 != 10</failure></testcase><testcase classname="tests.integration.test_37_sftp_storage.SFTPAcceptanceTests" file="tests\integration\test_37_sftp_storage.py" line="75" name="test_03_checkout" time="36.164"><failure message="AssertionError: &apos;ERROR&apos; unexpectedly found in &apos;ERROR - Metadata: No entity with that name was found.\nA complete log of this run can be found in: ml-git_execution.log\n\n\n\n\n\n\n\n\n&apos;">self = &lt;tests.integration.test_37_sftp_storage.SFTPAcceptanceTests testMethod=test_03_checkout&gt;

    @pytest.mark.usefixtures(&apos;start_local_git_server&apos;, &apos;switch_to_tmp_dir&apos;)
    def test_03_checkout(self):
        self.set_up_push()
        self.assertNotIn(ERROR_MESSAGE, check_output(MLGIT_PUSH % (self.repo_type, DATASET_NAME)))
        clear(self.workspace)
        clear(os.path.join(ML_GIT_DIR, self.repo_type))
    
        self.assertNotIn(ERROR_MESSAGE, check_output(MLGIT_ENTITY_INIT % self.repo_type))
&gt;       self.assertNotIn(ERROR_MESSAGE, check_output(MLGIT_CHECKOUT % (self.repo_type, DATASET_NAME)))
E       AssertionError: &apos;ERROR&apos; unexpectedly found in &apos;ERROR - Metadata: No entity with that name was found.\nA complete log of this run can be found in: ml-git_execution.log\n\n\n\n\n\n\n\n\n&apos;

C:\Users\ClaudinM\workspace\ml-git\tests\integration\test_37_sftp_storage.py:84: AssertionError</failure><system-out>Handling error for datasets\datasets-ex\newfile0
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C2609179C8&gt;)
Handling error for datasets\datasets-ex\newfile1
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C260917408&gt;)
Handling error for datasets\datasets-ex\newfile2
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C260917348&gt;)
Handling error for datasets\datasets-ex\newfile3
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C260917E08&gt;)
Handling error for datasets\datasets-ex\newfile4
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C2609172C8&gt;)
Handling error for .ml-git\datasets\metadata\.git\objects\10\0b93820ade4c16225673b4ca62bb3ade63c313
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C26090BA48&gt;)
Handling error for .ml-git\datasets\metadata\.git\objects\2b\e4028f22054e9505bd5faa2a4622f6d7efa003
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C26090B888&gt;)
Handling error for .ml-git\datasets\metadata\.git\objects\dc\ba1bc5b78ba93cc3f516cb8fce4f1c9dae0cf9
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C26090B808&gt;)
Handling error for .ml-git\datasets\metadata\.git\objects\f0\6c579d2a839940616a607e2250b6bb6edf64f4
(&lt;class &apos;PermissionError&apos;&gt;, PermissionError(13, &apos;Access is denied&apos;), &lt;traceback object at 0x000001C26090B8C8&gt;)
</system-out></testcase><testcase classname="tests.integration.test_37_sftp_storage.SFTPAcceptanceTests" file="tests\integration\test_37_sftp_storage.py" line="89" name="test_04_push_with_wrong_bucket" time="35.936"><failure message="AssertionError: &apos;This bucket does not exist -- [wrong_bucket]&apos; not found in &apos;private key file is encrypted\n\n\n\n\n\n\n\n\n&apos;">self = &lt;tests.integration.test_37_sftp_storage.SFTPAcceptanceTests testMethod=test_04_push_with_wrong_bucket&gt;

    @pytest.mark.usefixtures(&apos;start_local_git_server&apos;, &apos;switch_to_tmp_dir&apos;)
    def test_04_push_with_wrong_bucket(self):
        clear(SFTP_BUCKET_PATH)
        os.mkdir(SFTP_BUCKET_PATH)
        wrong_bucket = &apos;wrong_bucket&apos;
        self.assertIn(output_messages[&apos;INFO_INITIALIZED_PROJECT_IN&apos;] % self.tmp_dir, check_output(MLGIT_INIT))
        self.assertIn(output_messages[&apos;INFO_ADD_REMOTE&apos;] % (GIT_PATH, self.repo_type),
                      check_output(MLGIT_REMOTE_ADD % (self.repo_type, GIT_PATH)))
        self.assertIn(output_messages[&apos;INFO_ADD_STORAGE_WITHOUT_PROFILE&apos;] % (self.storage_type, wrong_bucket),
                      check_output(&apos;ml-git repository storage add %s --type=%s&apos; %
                                   (wrong_bucket, self.storage_type + &apos; --username=mlgit_user &apos;
                                                                      &apos;--port=9922 --endpoint-url=127.0.0.1 --private-key=&apos; + FAKE_SSH_KEY_PATH)))
        self.assertNotIn(ERROR_MESSAGE, check_output(MLGIT_ENTITY_INIT % self.repo_type))
    
        self.assertNotIn(ERROR_MESSAGE, check_output(
            MLGIT_CREATE % (DATASETS, DATASET_NAME + &apos; --storage-type=sftph --mutability=strict --categories=test &apos;
                                                     &apos;--bucket-name=wrong_bucket&apos;)))
        add_file(self, self.repo_type, &apos;&apos;, &apos;new&apos;)
    
        self.assertNotIn(ERROR_MESSAGE, check_output(MLGIT_ADD % (self.repo_type, DATASET_NAME, &apos;&apos;)))
        self.assertNotIn(ERROR_MESSAGE, check_output(MLGIT_COMMIT % (self.repo_type, DATASET_NAME, &apos;&apos;)))
        number_of_files_in_bucket = 0
        self.check_amount_of_files(number_of_files_in_bucket)
&gt;       self.assertIn(output_messages[&apos;ERROR_BUCKET_DOES_NOT_EXIST&apos;] % wrong_bucket, check_output(MLGIT_PUSH % (self.repo_type, DATASET_NAME)))
E       AssertionError: &apos;This bucket does not exist -- [wrong_bucket]&apos; not found in &apos;private key file is encrypted\n\n\n\n\n\n\n\n\n&apos;

C:\Users\ClaudinM\workspace\ml-git\tests\integration\test_37_sftp_storage.py:113: AssertionError</failure></testcase><testcase classname="tests.integration.test_37_sftp_storage.SFTPAcceptanceTests" file="tests\integration\test_37_sftp_storage.py" line="115" name="test_05_push_with_fail" time="28.732"><failure message="AssertionError: &apos;ERROR&apos; not found in &apos;private key file is encrypted\n\n\n\n\n\n\n\n\n&apos;">self = &lt;tests.integration.test_37_sftp_storage.SFTPAcceptanceTests testMethod=test_05_push_with_fail&gt;

    @pytest.mark.usefixtures(&apos;start_local_git_server&apos;, &apos;switch_to_tmp_dir&apos;)
    def test_05_push_with_fail(self):
        clear(SFTP_BUCKET_PATH)
        os.mkdir(SFTP_BUCKET_PATH)
        self.set_up_push(create_know_file=True)
    
        object_path = os.path.join(self.tmp_dir, &apos;.ml-git&apos;, self.repo_type, &apos;objects&apos;,
                                   &apos;hashfs&apos;, &apos;i9&apos;, &apos;96&apos;, &apos;zdj7Wi996ViPiddvDGvzjBBACZzw6YfPujBCaPHunVoyiTUCj&apos;)
        clear(object_path)
        number_of_files_in_bucket = 0
        self.check_amount_of_files(number_of_files_in_bucket)
&gt;       self.assertIn(ERROR_MESSAGE, check_output(MLGIT_PUSH % (self.repo_type, DATASET_NAME + &apos; --clearonfail&apos;)))
E       AssertionError: &apos;ERROR&apos; not found in &apos;private key file is encrypted\n\n\n\n\n\n\n\n\n&apos;

C:\Users\ClaudinM\workspace\ml-git\tests\integration\test_37_sftp_storage.py:127: AssertionError</failure></testcase></testsuite></testsuites>